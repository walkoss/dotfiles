# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

after-startup-command = [
  'exec-and-forget borders'
]

# # Notify Sketchybar about workspace change
# exec-on-workspace-change = ['/bin/bash', '-c',
#     'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
# ]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'horizontal'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 12
inner.vertical =   12

# Normal setup

outer.left =       12
# outer.bottom =     60
outer.bottom = 12
outer.top =        12
outer.right =      12



# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left --boundaries-action wrap-around-the-workspace'
alt-j = 'focus down --boundaries-action wrap-around-the-workspace'
alt-k = 'focus up --boundaries-action wrap-around-the-workspace'
alt-l = 'focus right --boundaries-action wrap-around-the-workspace'
alt-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
# alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
# alt-b = 'workspace B'
# alt-c = 'workspace C'
# alt-d = 'workspace D'
# alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
alt-m = 'workspace M'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-s = 'workspace S'
# alt-t = 'workspace T'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
# alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']   
alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
# alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
# alt-shift-a = ['move-node-to-workspace A', 'workspace A']
# alt-shift-b = ['move-node-to-workspace B', 'workspace B']
# alt-shift-c = ['move-node-to-workspace C', 'workspace C']
# alt-shift-d = ['move-node-to-workspace D', 'workspace D']
# alt-shift-e = ['move-node-to-workspace E', 'workspace E']
# alt-shift-f = ['move-node-to-workspace F', 'workspace F']
# alt-shift-g = ['move-node-to-workspace G', 'workspace G']
# alt-shift-i = ['move-node-to-workspace I', 'workspace 
alt-shift-m = ['move-node-to-workspace M', 'workspace M']
# alt-shift-n = ['move-node-to-workspace N', 'workspace N']
# alt-shift-o = ['move-node-to-workspace O', 'workspace O']
# alt-shift-p = ['move-node-to-workspace P', 'workspace P']
# alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']
# alt-shift-r = ['move-node-to-workspace R', 'workspace R']
# alt-shift-s = ['move-node-to-workspace S', 'workspace S']
# alt-shift-t = ['move-node-to-workspace T', 'workspace T']
# alt-shift-u = ['move-node-to-workspace U', 'workspace U']
# alt-shift-v = ['move-node-to-workspace V', 'workspace V']
# alt-shift-w = ['move-node-to-workspace W', 'workspace W']
# alt-shift-x = ['move-node-to-workspace X', 'workspace X']
# alt-shift-y = ['move-node-to-workspace Y', 'workspace Y']
# alt-shift-z = ['move-node-to-workspace Z', 'workspace Z']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

alt-leftSquareBracket = 'focus-monitor left'
alt-rightSquareBracket = 'focus-monitor right'

# Custom shortcuts
# alt-enter = 'exec-and-forget open -n /Applications/iTerm.app'
# alt-b = 'exec-and-forget open -n /Applications/Google Chrome.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
m = 'macos-native-minimize'

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']


# 6.1. Assign workspaces to monitors
# You can use workspace-to-monitor-force-assignment syntax to assign workspaces to always appear on particular monitors

# [workspace-to-monitor-force-assignment]
# 1 = 1                            # Monitor sequence number from left to right. 1-based indexing
# 2 = 'main'                       # Main monitor
# 3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
# 4 = 'built-in'                   # Case insensitive regex substring
# 5 = '^built-in retina display$'  # Case insensitive regex match
# 6 = ['secondary', 'dell']        # You can specify multiple patterns. The first matching pattern will be used
# Left hand side of the assignment is the workspace name

# Right hand side of the assignment is the monitor pattern

# Supported monitor patterns:

# main - "Main" monitor ("main" as in System Settings → Displays → Use as)

# secondary - Non-main monitor in case when there are only two monitors

# <number> (e.g. 1, 2) - Sequence number of the monitor from left to right. 1-based indexing

# <regex-pattern> (e.g. dell.*, built-in.*) - Case insensitive regex substring pattern

# You can specify multiple patterns as an array. The first matching pattern will be used

# move-workspace-to-monitor command has no effect for workspaces that have monitor assignment

[workspace-to-monitor-force-assignment]
1 = 'main'
2 = 'main'
3 = 'main'
4 = ['3', 'secondary']
5 = 'built-in'
6 = 'built-in'
7 = 'built-in'
8 = 'built-in'
M = ['built-in', '3', 'secondary']

# Hooks

####################
## Main work apps ##
####################
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92' # Cursor
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.linear'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'notion.id'
run = 'move-node-to-workspace 4'

#####################
## Meassaging Apps ##
#####################
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace M'

####################
## Music Apps     ##
####################

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 6'

#################
## Setting App ##
#################
[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'layout floating'
